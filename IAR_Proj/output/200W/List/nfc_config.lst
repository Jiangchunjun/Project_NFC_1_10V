###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.1.11864/W32 for ARM       22/Apr/2019  09:57:18
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\NFC\nfc_config.c
#    Command line =  
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\NFC\nfc_config.c"
#        -D XMC1301_T038x0064 -D OT_NFC_IP67_200W -D NDEBUG -D ENABLT_WDT -D
#        ENABLE_COMM -D ENABLE_USART -D nDEBUG_PRINT -D nDEBUG_VERSION -D
#        MODULE_I2C -D MODULE_M24LRxx -D MODULE_NFC -D MODULE_NFC_DALI -D
#        ENASTRO -D NO_FAST_TIME_ASTRO -D NO_EN_CLM_TIME_FAST -D ENABLE_OVP -D
#        ENABLE_MOBILE -D ENABLE_ONE2TEN -D BYTEORDER_LITTLE_ENDIAN -D
#        AVAILABLE_PORTS_NUMBER=3 -D FW_HIGH=01 -D FW_LOW=02 -D ENASTRO -D
#        MPC_O2T_DEFAULT_SETTINGS -D MPC_O2T_DEFAULT_BOUNDARIES -lc "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\List" -o "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\IAR ARM
#        7.8\arm\INC\c\DLib_Config_Normal.h" -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\XMCLib\inc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\CMSIS\Infineon\XMC1300_series\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\CMSIS\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\inc\" -I
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Driver\inc\" -I "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\Config\devices\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\Config\" -I "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\driver_ot\" -I
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\CRC\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\CRC\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\fileTank\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\I2cExt\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\I2cExt\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\NfcExt\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\NfcExt\M24LRxx\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\"
#        -I PROJ_DIR$\..\Application\src\modules\NVM\api\ -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\driver_xmc1300\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\currentset\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\supplymonitor\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\DaliServices\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\HW\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Modules\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Optional\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Services\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Acl\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Alloc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Alloc\Legacy\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Clm\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Csm\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Info\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\MSK\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\O2T\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\AstroDim\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\MSKEncryption\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Power\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\EOL\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NFC\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\I2C\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\XMCLib\inc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\CMSIS\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\CMSIS\Infineon\XMC1300_series\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC16\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\hwdrivers\XMC1300\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\supplymonitor\"
#        -Ol
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\List\nfc_config.lst
#    Object file  =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\Obj\nfc_config.o
#
###############################################################################

C:\C Pan\work\NFC 1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\NFC\nfc_config.c
      1          // ---------------------------------------------------------------------------------------------------------------------
      2          // nfc_config.c
      3          // ---------------------------------------------------------------------------------------------------------------------
      4          // (c) Osram GmbH
      5          // Development Electronics for SSL
      6          // Parkring 33
      7          // 85748 Garching
      8          //
      9          // The content of this file is intellectual property of OSRAM GmbH. It is
     10          // confidential and not intended for any public release. All rights reserved.
     11          //
     12          // Indent style: Replace tabs by spaces, 4 spaces per indentation level
     13          //
     14          // Initial version: Sammy el Baradie,  27/07/2016
     15          //
     16          // $Author: g.salvador $
     17          // $Revision: 16253 $
     18          // $Date: 2018-12-18 17:59:27 +0800 (Tue, 18 Dec 2018) $
     19          // $Id: nfc_config.c 16253 2018-12-18 09:59:27Z g.salvador $
     20          // $URL: https://app-ehnsvn02.int.osram-light.com/svn/EC/Toolbox1.0/Nfc/tags/v2.7/Src/nfc_config.c $
     21          //
     22          // ---------------------------------------------------------------------------------------------------------------------
     23          
     24          
     25          #define MODULE_NFC
                         ^
Warning[Pe047]: incompatible redefinition of macro "MODULE_NFC" (declared at
          line 25)
     26          #include "Global.h"
     27          #include "Config.h"
     28          #include "ErrorHandler.h"
     29          #include "Acl.h"
     30          #include "Mpc.h"
     31          #include "MpcInternal.h"
     32          #include "MpcAllocation.h"
     33          
     34          #include "Nfc.h"
     35          #include "nfc_config.h"
     36          #include "nfc_local.h"
     37          #include "nfc_parameters.h"
     38          
     39          
     40          /** \file
     41           * \brief Define device specific parameters for Device Identification Registers
     42           *        and TOC. Create NFC tag start addresses for each MPC instance.
     43           */
     44          
     45          //-----------------------------------------------------------------------------
     46          // constants
     47          //-----------------------------------------------------------------------------
     48          
     49          /** NFC_CONFIG_STD1 defines specific start addresses for data assignment to
     50           * different read / write protection classes
     51           */
     52          
     53          
     54          
     55          #if(defined (NFC_CONFIG_UNPROTECTED_LAYOUT) && defined(NFC_CONFIG_PROTECTED_LAYOUT))
     56            STATIC_ASSERT(0,  "Only ONE TAG protection layout configuration has to be choosen between\n "
     57                              "NFC_CONFIG_UNPROTECTED_LAYOUT and NFC_CONFIG_PROTECTED_LAYOUT.        \n "
     58                              "Please ensure to define only one of this in the entire code");
     59          #endif
     60          
     61          
     62          
     63          #if(defined (NFC_CONFIG_UNPROTECTED_LAYOUT)||defined(NFC_CONFIG_PROTECTED_LAYOUT))
     64          
     65          // Define standard parameters fitting to several platforms
     66          #ifdef NFC_CONFIG_UNPROTECTED_LAYOUT
     67          
     68              // First Mpc Start Address is right after the TOC (BIO page)
     69              // It is the read-only sector, protected by RF Passowrd 1
     70              // Its length vary depending on the TOC-length!
     71              #define NFC_FIRST_MPC_START_ADDR            ((NFC_TOC_START_ADDR + \
     72                                                          NFC_TAG_TOC_REGISTER_BYTE_COUNT + \
     73                                                          NFC_CRC_LENGTH + 4) & 0xFFFC)
     74              // Fix address of the Status Register
     75              #define NFC_STATUS_REGISTER_START_ADDR      252
     76          
     77              // Fix address of the Control Register
     78              #define NFC_CONTROL_REGISTER_START_ADDR     256
     79          
     80              // Protected memory area start address.
     81              // It is protected by RF Password 2
     82              // It has a fixed length of 3 sectors (11, 12 and 13 -> 128*3= 384 bytes)
     83              #define NFC_PROTECTED_MEMORY_START_ADDR    (NFC_CONTROL_REGISTER_START_ADDR + \
     84                                                          9*NFC_TAG_SECTOR_LENGTH)
     85          #else
     86              // First Mpc Start Address is right after the TOC (BIO page)
     87              // It is the read-only sector, protected by RF Passowrd 1
     88              // Its length vary depending on the TOC-length!
     89              #define NFC_FIRST_MPC_START_ADDR            ((NFC_TOC_START_ADDR + \
     90                                                          NFC_TAG_TOC_REGISTER_BYTE_COUNT + \
     91                                                          NFC_CRC_LENGTH + 4) & 0xFFFC)
     92              // Fix address of the Status Register
     93              #define NFC_STATUS_REGISTER_START_ADDR      252
     94          
     95              // Fix address of the Control Register
     96              #define NFC_CONTROL_REGISTER_START_ADDR     256
     97          
     98              // Protected memory area start address.
     99              // It is protected by RF Password 2
    100              // It has a fixed length of 11 sectors (from 3 to 13 -> 128*11= 1408 bytes)
    101              #define NFC_PROTECTED_MEMORY_START_ADDR    (NFC_CONTROL_REGISTER_START_ADDR + \
    102                                                          NFC_TAG_SECTOR_LENGTH)
    103          #endif
    104          
    105          #else
    106            STATIC_ASSERT(0,  "A TAG protection layout has to be choosen between NFC_CONFIG_UNPROTECTED_LAYOUT \n"
    107                              " and NFC_CONFIG_PROTECTED_LAYOUT. Please ensure that your project includes the \n"
    108                              " definition for the appropriate TAG protection layout. (usually in the Config.h)");
    109          #endif
    110          
    111          
    112          //-----------------------------------------------------------------------------
    113          /**
    114           * array of special NFC TAG addresses
    115           *
    116           * \note this array assigns defined tag address values
    117           * representing different read / write protection classes
    118           */
    119          const nfc_tag_addr_config_t nfc_tag_addr_config =
    120          {
    121             .first_mpc_start_addr          = NFC_FIRST_MPC_START_ADDR,
    122             .status_register_start_addr    = NFC_STATUS_REGISTER_START_ADDR,
    123             .control_register_start_addr   = NFC_CONTROL_REGISTER_START_ADDR,
    124             .protected_memory_start_addr   = NFC_PROTECTED_MEMORY_START_ADDR
    125          };
    126          
    127          
    128          //------------------------------------------------------------------------------
    129          // global variables
    130          //------------------------------------------------------------------------------
    131          
    132          /**
    133           * NFC TAG Copy Memory
    134           * externally defined to minimize ram size if NFC is part of a library
    135           */
    136          uint8_t nfc_tag_copy[];
    137          
    138          /**
    139           * pointer to externally declared NFC tag start address array
    140           * used in this file to assign a defined array length
    141           */
    142          uint16_t * NfcMpcTagStartAddr;
    143          
    144          /**
    145           * pointer to TOC items array
    146           * used in this file to assign a defined array length
    147           */
    148          toc_item_t * toc_items;
    149          
    150          
    151          #ifdef NFC_TAG_COPY_BYTE_SIZE
    152             uint8_t  nfc_tag_copy[NFC_TAG_COPY_BYTE_SIZE];
    153          #else
    154            STATIC_ASSERT(0,  "Parameter NFC_TAG_COPY_BYTE_SIZE is not defined. Please ensure that your project\n"
    155                              " - either defines an appropriate platform, which comes along with this parameter\n"
    156                              " - or has a ConfigNfc.h (normally included by Config.h) defining this parameter\n"
    157                              " - or has this definition somewhere else.");
    158          #endif
    159          
    160          
    161          
    162          // -----------------------------------------------------------------------------
    163          /**
    164          * \brief
    165          * - MPC_COUNT corresponds to the number of implemented MPCs and
    166          *   is defined in MpcDefaultConfiguration.h
    167          * - MPC_NFC_INST enumerates MPC_COUNT with all its instances
    168          * - For single channel devices, MPC_NFC_INST equals MPC_COUNT
    169          */
    170          
    171          //------------------------------------------------------------------------------
    172          /**
    173           * \brief define array with defined length for assignment to NfcMpcTagStartAddr
    174          */
    175          uint16_t nfc_p[MPC_NFC_INST];
    176          
    177          
    178          /**
    179           * \brief define array with defined length for assignment to toc_items
    180          */
    181          toc_item_t toc_p[MPC_NFC_INST];
    182          
    183          
    184          //------------------------------------------------------------------------------
    185          // global functions
    186          //------------------------------------------------------------------------------
    187          /**
    188           * Return NFC tag copy memory size
    189           *
    190           * Normally this parameter is not needed anywhere except here. Therefore,
    191           * this function should not be used/linked in production code.
    192           *
    193           * Nevertheless add this function for test purposes to provide the authoritative
    194           * answer about this parameter also in case of config file issues.
    195           */
    196          // LCOV_EXCL_START : Normally unneeded function tested inherently if really used
    197          uint16_t nfc_tag_copy_size ( void )
    198          {
    199            return NFC_TAG_COPY_BYTE_SIZE;
    200          }
    201          // LCOV_EXCL_STOP
    202          
    203          
    204          // -----------------------------------------------------------------------------
    205          /**
    206           * \brief initialize arrays NfcMpcTagStartAddr[] and toc_items[]
    207           * \note The function is needed to allow different values in unit tests for
    208           * MPC_COUNT and MPC_NFC_INST
    209           * - assign pointers with defined lengths in project firmware
    210           * - assign pointers with changeable lengths in unit tests
    211           * \param length: Needed for unit tests only to assign variable array lengths
    212           */
    213          void nfc_init_arrays ( uint8_t length )
    214          {
    215            #ifdef DEVICE_UNDER_TEST
    216              #if defined (__ICCARM__) || defined (ECG_SIMULATOR)
    217                #error "This code is for unit tests only; It never ever should be compiled for real life or even the Simulator."
    218              #endif
    219              #include <stdlib.h>
    220              NfcMpcTagStartAddr = malloc(length * sizeof(uint16_t));
    221              toc_items = malloc(length * sizeof(toc_item_t));
    222            #else
    223              NfcMpcTagStartAddr = nfc_p;
    224              toc_items = toc_p;
    225            #endif
    226          }
    227          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   nfc_init_arrays
       0   nfc_tag_copy_size


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  NfcMpcTagStartAddr
      14  nfc_init_arrays
      20  nfc_p
       8  nfc_tag_addr_config
    1000  nfc_tag_copy
       6  nfc_tag_copy_size
       4  toc_items
      80  toc_p

 
 1 108 bytes in section .bss
     8 bytes in section .rodata
    36 bytes in section .text
 
    36 bytes of CODE  memory
     8 bytes of CONST memory
 1 108 bytes of DATA  memory

Errors: none
Warnings: 1
