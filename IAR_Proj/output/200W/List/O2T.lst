###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.1.11864/W32 for ARM       22/Apr/2019  14:03:58
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\MPC\O2T\O2T.c
#    Command line =  
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\MPC\O2T\O2T.c"
#        -D XMC1301_T038x0064 -D OT_NFC_IP67_200W -D NDEBUG -D ENABLT_WDT -D
#        ENABLE_COMM -D ENABLE_USART -D nDEBUG_PRINT -D nDEBUG_VERSION -D
#        MODULE_I2C -D MODULE_M24LRxx -D MODULE_NFC -D MODULE_NFC_DALI -D
#        ENASTRO -D NO_FAST_TIME_ASTRO -D NO_EN_CLM_TIME_FAST -D ENABLE_OVP -D
#        ENABLE_MOBILE -D ENABLE_ONE2TEN -D BYTEORDER_LITTLE_ENDIAN -D
#        AVAILABLE_PORTS_NUMBER=3 -D FW_HIGH=01 -D FW_LOW=02 -D ENASTRO -D
#        MPC_O2T_DEFAULT_SETTINGS -D MPC_O2T_DEFAULT_BOUNDARIES -lc "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\List" -o "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\IAR ARM
#        7.8\arm\INC\c\DLib_Config_Normal.h" -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\XMCLib\inc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\CMSIS\Infineon\XMC1300_series\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\XMC_Peripheral_Library\CMSIS\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\inc\" -I
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Driver\inc\" -I "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\Config\devices\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\Config\" -I "C:\C
#        Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\driver_ot\" -I
#        "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\CRC\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\CRC\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\fileTank\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\I2cExt\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\I2cExt\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\NfcExt\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Import\modules\NfcExt\M24LRxx\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\"
#        -I PROJ_DIR$\..\Application\src\modules\NVM\api\ -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\driver_xmc1300\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC\driver_api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\currentset\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\supplymonitor\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\DaliServices\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\HW\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Modules\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Optional\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\Dali\iFace\Services\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Acl\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Alloc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Alloc\Legacy\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Clm\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Csm\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Info\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\MSK\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\O2T\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\AstroDim\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\MSKEncryption\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\Power\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\MPC\EOL\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NFC\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\I2C\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\XMCLib\inc\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\CMSIS\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\XMCLib\CMSIS\Infineon\XMC1300_series\Include\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\CRC16\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\hwdrivers\XMC1300\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\NVM\api\"
#        -I "C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\..\Application\src\modules\supplymonitor\"
#        -Ol
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\List\O2T.lst
#    Object file  =  
#        C:\C Pan\work\NFC
#        1-10\NFC2_1_10V\Project_NFC_1_10V\IAR_Proj\output\200W\Obj\O2T.o
#
###############################################################################

C:\C Pan\work\NFC 1-10\NFC2_1_10V\Project_NFC_1_10V\Application\src\modules\MPC\O2T\O2T.c
      1          // ---------------------------------------------------------------------------------------------------------------------
      2          // Microcontroller Toolbox - Firmware Framework for Full Digital SSL Ballasts
      3          // ---------------------------------------------------------------------------------------------------------------------
      4          // (c) Osram GmbH
      5          //     DS D EC - MCC
      6          //     Parkring 33
      7          //     85748 Garching
      8          //
      9          //
     10          // The content of this file is intellectual property of OSRAM, BU DS. It is confidential and not
     11          // intended for any public release. All rights reserved.
     12          //
     13          // Within the company the policy of a strict "who needs to know?" applies: Store this only at locations,
     14          // where EXCLUSIVELY people who really NEED it for their DAY-TO-DAY business can access.
     15          //
     16          //  - Convenience or to save it for occasion are no valid arguments. Get a fresh and updated copy when needed.
     17          //  - Neither "departments shares" nor other potential local practices normally fulfill this policy.
     18          //  - Please, especially be careful about backups, they often are forgotten and an usual origin of diffusion.
     19          //  - Also be careful with code coverage reporting tools: They normally include the full sources, but the
     20          //    results often are published widely.
     21          //
     22          // Indent style: Replace tabs by spaces, 2 spaces per indentation level
     23          //
     24          // Change history, major milestones and credits:
     25          //   2018-12: Filippo Branchetti, Martin Hutzl
     26          //
     27          //
     28          // $Author$
     29          // $Revision$
     30          // $Date$
     31          // $Id$
     32          // $URL$
     33          //
     34          #define MODULE_O2T
     35          #define MODULE_MPC
     36          #include <string.h>
     37          #include "Global.h"
     38          #include "Config.h"
     39          #include "AclDefaults.h"
     40          #include "MpcInternal.h"
     41          #include "Acl.h"
     42          #include "Mpc.h"
     43          #include "nvm.h"
     44          #include "O2T.h"
     45          #include "O2T_private.h"
     46          
     47          /* Warning  ------------------------------------------------------------------*/
     48          #warning message( "Do Not use this version: Module under construction ")
                  ^
Warning[Pe1105]: #warning directive: message( "Do Not use this version: Module
          under construction ")
     49          #warning message( " Ask for released and tagged version  ")
                  ^
Warning[Pe1105]: #warning directive: message( " Ask for released and tagged
          version  ")
     50          
     51          /* Private makro -------------------------------------------------------------*/
     52          /* Private define ------------------------------------------------------------*/
     53          /* Private typedef -----------------------------------------------------------*/
     54          /* Private variables ---------------------------------------------------------*/
     55          zero2ten_config_t o2t;
     56          /* Public variables ----------------------------------------------------------*/
     57          /* Private function prototypes -----------------------------------------------*/
     58          /* Private constants ---------------------------------------------------------*/
     59          
     60          // ---------------------------------------------------------------------------------------------------------------------
     61          // This table is auto-generated by TabTools; Please don't edit manually, all changes will be discarded by next make
     62          
     63          static const uint32_t o2t_constants[] = {
     64              [  0] = (uint32_t) &o2t.nvm.enable,                                 // used for entity   0   VAR O2TENABLE
     65              [  1] = (uint32_t) (ACL_PERM_ALWAYS),                               // used for permissions Rd000 Wr000 Rd001 Wr001 Rd002 Wr002 Rd003 Wr003 Rd004 Wr004 Rd005 Wr005 Rd006 Wr006 Rd007 Wr007 Rd008 Wr008
     66              [  2] = (uint32_t) (ACL_PERM_NEVER),                                // used for permissions
     67              [  3] = (uint32_t) (0xffffffff),                                    // used for fallbacks En000 En001 En002 En003 En004 En005 En006 En007 En008
     68              [  4] = (uint32_t) &o2t.nvm.minDimLevel,                            // used for entity   1   VAR MINDIMLEVEL
     69          };
     70          
     71          
     72          // ---------------------------------------------------------------------------------------------------------------------
     73          // This table is auto-generated by TabTools; Please don't edit manually, all changes will be discarded by next make
     74          
     75          static const mpc_data_entity_t o2t_entities[] = {
     76              [  0] = MPC_ENTITY( MPC_TYP_VAR, 1,  1,  1,  3,   0,  0),           // D2WENABLE
     77              [  1] = MPC_ENTITY( MPC_TYP_VAR, 2,  1,  1,  3,   4,  0),           // MINDIMLEVEL
     78          };
     79          
     80          
     81          // ---------------------------------------------------------------------------------------------------------------------
     82          // This table is auto-generated by TabTools; Please don't edit manually, all changes will be discarded by next make
     83          
     84          static const mpc_layout_t o2t_layout[] = {
     85              [  0] = MPC_LAYOUT8                              (   0 ),           // O2TENABLE
     86              [  1] = MPC_LAYOUT16_MSB                         (   1 ),           // MINDIMLEVEL
     87              [  2] = MPC_LAYOUT16_LSB                         (   1 ),           // MINDIMLEVEL
     88          };
     89          
     90          
     91          //------------------------------------------------------------------------------
     92          /// \brief Data stored in NVM
     93          //------------------------------------------------------------------------------
     94          STATIC void InitNvmData ( void )
     95          {
     96            memset( &o2t.nvm, 0x00, sizeof( o2t.nvm ) );
     97            o2t.nvm.enable = MPC_O2T_CONFIG_ENABLED;
     98            o2t.nvm.minDimLevel = MPC_O2T_CONFIG_MINDIMLEVEL;
     99          }
    100          
    101          //------------------------------------------------------------------------------
    102          /// \brief Data stored in RAM
    103          //------------------------------------------------------------------------------
    104          STATIC void InitRamData ( void )
    105          {
    106            // memset( &d2w.ram, 0x00, sizeof( d2w.ram ) );
    107          }
    108          
    109          //------------------------------------------------------------------------------
    110          /// \brief Inits data after power up
    111          //------------------------------------------------------------------------------
    112          STATIC void PageInit ( void ) {
    113            if ( nvmDataInit(&o2t.nvm ,sizeof( o2t.nvm  ),NVM_MEM_CLASS_0) != NVM_INIT_OK ) // Normal startup -> init if flash corrupted
    114            {
    115              InitNvmData();
    116            }
    117            InitRamData();
    118          }
    119          
    120          //------------------------------------------------------------------------------
    121          /// \brief Executed when CMD == MPC_CMD_RESET
    122          //------------------------------------------------------------------------------
    123          STATIC void PageReset (void) {
    124            InitRamData();
    125          }
    126          
    127          //------------------------------------------------------------------------------
    128          /// \brief Executed when CMD == MPC_CMD_FACTORY_RESET
    129          //------------------------------------------------------------------------------
    130          STATIC void PageFactoryReset ( void ) {
    131          
    132            InitNvmData();
    133            InitRamData();
    134          }
    135          
    136          //------------------------------------------------------------------------------
    137          /// \brief CMD D2W MPC
    138          //------------------------------------------------------------------------------
    139          STATIC mpc_returncodes_enum O2T_command(mpc_cmd_t cmd, uint8_t channel, mpc_port_t port) {
    140            (void) cmd;
    141            (void) channel;
    142            (void) port;
    143          
    144            if ( cmd == MPC_CMD_INIT )
    145            {
    146              PageInit();
    147            }
    148            else if ( cmd == MPC_CMD_RESET ) {
    149              PageReset();
    150            }
    151            else if ( cmd == MPC_CMD_FACTORY_RESET ) {
    152              PageFactoryReset();
    153            }
    154            return MPC_OK;
    155          };
    156          
    157          //------------------------------------------------------------------------------
    158          /// \brief Page Description
    159          //------------------------------------------------------------------------------
    160          const mpc_descriptor_t O2T_Descriptor = {
    161            .keydata            = {
    162              .id             = O2T_MPC_ID,
    163              .version        = O2T_VERSION_MAJOR,
    164              .attributes     = 0,
    165              .payload_off    = 5,
    166              .length         = 3,
    167            },
    168            .tables_len   = (sizeof(o2t_layout) / sizeof(mpc_layout_t)),
    169            .entities     = o2t_entities,
    170            .constants    = o2t_constants,
    171            .layout       = o2t_layout,
    172            .Cmd          = &O2T_command,
    173          };
    174          
    175          // ----------------------------------------------------------------------------------
    176          /// \brief Getter function for O2T configuration
    177          //-----------------------------------------------------------------------------------
    178          uint8_t O2T_GetEnableConfig( void ) {
    179            return ( o2t.nvm.enable );
    180          }
    181          
    182          // ----------------------------------------------------------------------------------
    183          /// \brief Getter function for O2T configuration
    184          //-----------------------------------------------------------------------------------
    185          uint16_t O2T_GetMinDimLevel( void ) {
    186            if ( o2t.nvm.minDimLevel > MPC_O2T_CONFIG_MINDIMLEVEL_MAX ) {
    187              o2t.nvm.minDimLevel = MPC_O2T_CONFIG_MINDIMLEVEL_MAX;
    188            }
    189            else if ( o2t.nvm.minDimLevel < MPC_O2T_CONFIG_MINDIMLEVEL_MIN ) {
    190              o2t.nvm.minDimLevel = MPC_O2T_CONFIG_MINDIMLEVEL_MIN;
    191            }
    192            return ( o2t.nvm.minDimLevel );
    193          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   InitNvmData
         8   -> __aeabi_memset
       0   InitRamData
       0   O2T_GetEnableConfig
       4   O2T_GetMinDimLevel
       8   O2T_command
         8   -> PageFactoryReset
         8   -> PageInit
         8   -> PageReset
       8   PageFactoryReset
         8   -> InitNvmData
         8   -> InitRamData
       8   PageInit
         8   -> InitNvmData
         8   -> InitRamData
         8   -> nvmDataInit
       8   PageReset
         8   -> InitRamData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      28  InitNvmData
       2  InitRamData
      40  O2T_Descriptor
       6  O2T_GetEnableConfig
      44  O2T_GetMinDimLevel
      42  O2T_command
      12  PageFactoryReset
      26  PageInit
       8  PageReset
       4  o2t
      20  o2t_constants
       8  o2t_entities
       8  o2t_layout

 
   4 bytes in section .bss
  76 bytes in section .rodata
 180 bytes in section .text
 
 180 bytes of CODE  memory
  76 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: 2
